# Generated by Django 3.2.15 on 2022-08-30 09:26

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('business_name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('gender', models.CharField(max_length=255)),
                ('age', models.CharField(max_length=255)),
                ('date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Kyc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passport_name', models.CharField(max_length=50)),
                ('outter_name', models.CharField(max_length=50)),
                ('inner_name', models.CharField(max_length=50)),
                ('client_Passport_Img', models.ImageField(upload_to='images/')),
                ('client_Outter_Img', models.ImageField(upload_to='images/')),
                ('client_Inner_Img', models.ImageField(upload_to='images/')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.client')),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('addr', models.CharField(max_length=255)),
                ('date', models.DateTimeField(auto_now=True)),
                ('kyc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.kyc')),
            ],
        ),
        migrations.CreateModel(
            name='Questionaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('have_account', models.BooleanField(default=False)),
                ('loan_access', models.BooleanField(default=False)),
                ('financial_support', models.BooleanField(default=False)),
                ('max_loan', models.CharField(max_length=255)),
                ('business_experience', models.CharField(max_length=255)),
                ('shop_experience', models.CharField(max_length=255)),
                ('is_business_owner', models.BooleanField(default=False)),
                ('duration', models.CharField(max_length=255)),
                ('delivery', models.CharField(max_length=255)),
                ('commute', models.CharField(max_length=255)),
                ('challenges', models.CharField(max_length=255)),
                ('credit', models.CharField(max_length=255)),
                ('debtors', models.CharField(max_length=255)),
                ('service', models.CharField(max_length=255)),
                ('qualification', models.CharField(max_length=255)),
                ('employees', models.CharField(max_length=255)),
                ('turnover', models.CharField(max_length=255)),
                ('sales', models.CharField(max_length=255)),
                ('cac', models.BooleanField(default=False)),
                ('council', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.client')),
            ],
        ),
        migrations.CreateModel(
            name='Drug',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug', models.CharField(max_length=255)),
                ('quantity', models.IntegerField()),
                ('approved', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now=True)),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='main.shop')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
